version: "3"
services:
  nats:
    image: nats:2.2-alpine3.13
    networks:
      - backend
    deploy:
      restart_policy:
        condition: on-failure

  vote:
    image: registry.gitlab.com/voting-application/vote:v3
    networks:
      - frontend
      - backend
    ports:
      - 5002:80
    depends_on:
      - nats
    deploy:
      replicas: 2
      update_config:
        parallelism: 2
      restart_policy:
        condition: on-failure

  vote-ui:
    image: registry.gitlab.com/voting-application/vote-ui
    ports:
      - 5000:80
    networks:
      - frontend
    depends_on:
      - vote
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure

  result:
    image: registry.gitlab.com/voting-application/result:v3
    networks:
      - frontend
      - backend
    depends_on:
      - db
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure

  result-ui:
    image: registry.gitlab.com/voting-application/result-ui
    ports:
      - 5001:80
    networks:
      - frontend
    depends_on:
      - result
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure

  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "8080:8080"
    stop_grace_period: 1m30s
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]

networks:
  frontend:
  backend:
